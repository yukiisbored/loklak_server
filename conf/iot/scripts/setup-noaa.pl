#!/usr/bin/perl

use CGI qw( escapeHTML );

my @states_entries = ();
my @states_entryValues = ();

sub process_statelist {
    my $html = `wget -O- -q https://alerts.weather.gov/`;
    $html =~ s@.*summary="Table summary@@s;
    $html =~ s@.*<tbody>\s*@@s;
    $html =~ s@\s*</tbody>.*@@s;
    $html =~ s@<!-- .*? -->\s*@@s;
    %seen = ();

    while ( $html =~ m@cap/(\w+?)\.php\?x=1">([^<]+)</a>@sg ) {
        my $code = $1;
        my $name = $2;
        $name =~ s/'/\\'/g;
        $name =~ s@\s+@ @g;
        if (!exists($seen{$code})) {
            push @states_entries, $name;
            push @states_entryValues, $code;
        }
        $seen{$code} = 1;
    }
    open STATE, ">", "states.xml";
    print STATE <<EOF1;
<?xml version="1.0" encoding="utf-8"?>
<!-- This file is generated by scripts/setup-noaa.pl -->
<resources>

    <string-array name="preference_state_entries">
EOF1
    foreach my $entry (@states_entries) {
        my $temp = $entry;
        $temp =~ s/'/\\'/g;
        $temp = escapeHTML($temp);
        print STATE "        <item>$temp</item>\n";
    }
    print STATE <<EOF2;
    </string-array>
    <string-array name="preference_state_entryvalues">
EOF2
    foreach my $entryValue (@states_entryValues) {
        my $temp = $entryValue;
        print STATE "        <item>$temp</item>\n";
    }
    print STATE <<EOF3;
    </string-array>

</resources>
EOF3
    close STATE;
    print "Wrote states.xml.\n";
}

sub process_state {
    my $state = shift @_;
    if ( $state !~ /^[a-z]+$/ ) {
        print "Invalid state code: $state (skipped)\n";
        return;
    }

    my $html = `wget -O- -q https://alerts.weather.gov/cap/${state}.php?x=3`;

    my @entries     = ();
    my @entryValues = ();

    $html =~ s@<a name='cnlist'>.*</html>@@s;
    while ( $html =~
m@<tr>\s*?<td[^>]+>\s*?<a[^>]+>\s*?<img[^>]+>\s*?</a></td>\s*?<td[^>]+>\s*?<a[^>]+>([^<]+)</a>\s*?</td>\s*?<td[^>]+>([^<]+)</td>\s*?</tr>\s*@mg
      )
    {
        push @entries,     $2;
        push @entryValues, $1;
    }
    my $unittype = "Entire State";
    if ($state =~ /^mz/) {
        $unittype = "Entire Marine Zone";
    }
    if ($state eq "dc") {
        $unittype = "Entire District";
    }
    if (grep { $_ eq $state } qw(as gu mp um vi) ) {
        $unittype = "Entire Territory";
    }
    if ($state eq "us") {
        $unittype = "Entire Country";
    }
    if ($state eq "mzus") {
        $unittype = "All Marine Zones";
    }
    print COUNTIES <<EOF1;
    <string-array name="preference_county_entries_$state">
        <item>$unittype</item>
EOF1
    foreach my $entry (@entries) {
        my $temp = $entry;
        $temp =~ s/'/\\'/g;
        $temp = escapeHTML($temp);
        print COUNTIES "        <item>$temp</item>\n";
    }
    print COUNTIES <<EOF2;
    </string-array>
    <string-array name="preference_county_entryvalues_$state">
        <item>https://alerts.weather.gov/cap/$state.php?x=0</item>
EOF2
    foreach my $entryValue (@entryValues) {
        my $temp = $entryValue;
        $temp =~ s/'/\\'/g;
        $temp = escapeHTML($temp);
        print COUNTIES "        <item>https://alerts.weather.gov/cap/wwaatmget.php?x=$temp&amp;y=0</item>\n";
    }
    print COUNTIES <<EOF3;
    </string-array>
EOF3
    print "Processed counties from $state.\n";

}

process_statelist();

open COUNTIES, ">", "counties.xml";
print COUNTIES <<EOF1;
<?xml version="1.0" encoding="utf-8"?>
<!-- This file is generated by iot/scripts/setup-noaa.pl -->
<resources>

EOF1
foreach my $state (@states_entryValues) {
    process_state($state);
}
print COUNTIES <<EOF3;

</resources>
EOF3
close COUNTIES;
print "Wrote counties.xml\n";
